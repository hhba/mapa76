-# coding: utf-8
- content_for :javascripts do
  = javascript_include_tag 'js/documents.js'
  :javascript
    $(function() {
      $(".with-scrollbar").mCustomScrollbar({
        mouseWheel: 5,
        scrollInertia: 250,
        advanced: { updateOnBrowserResize: true }
      });
    });

%script#documentContextError{:type => "text/template"}
  .alert.alert-error
    = I18n.t("documents.error")

%script#documentContext{:type => "text/template"}
  %h4 {{ heading }}
  = partial "documents/context_tabs"

%header
  .subnav.subnav-fixed
    %ul.nav.nav-pills
      %li{:class => request.path_info == url(:documents, :index) ? "active" : nil}
        %a{:href => url(:documents, :index)}= I18n.t("documents.documents")
      %li{:class => request.path_info.start_with?(url(:documents, :new)) ? "active" : nil}
        %a{:href => url_for(:documents, :new)}= I18n.t("documents.new")
      %li{:class => request.path_info.start_with?(url(:documents, :mine)) ? "active" : nil}
        %a{:href => url_for(:documents, :mine)}= I18n.t("documents.my_documents")

- content_for :free do
  .row-fluid
    .content.span7
      .row-fluid
        %table{:class => 'table documents', :id => 'sorteable'}
          %thead
            %tr
              %th{:style => "width: 70px"}
              %th
                %a{:href => '#', "data-sort" => "name"}= I18n.t("documents.title")
              %th
                %a{:href => '#', "data-sort" => "name"}= I18n.t("documents.type")
              %th
                %a{:href => '#', "data-sort" => "date"}= I18n.t("documents.date")
              %th
                %a{:href => '#', "data-sort" => "status"}= I18n.t("documents.status")
          %tbody
            - @docs.each do |doc|
              %tr{:"data-id" => doc.id}
                %td{:style => "width: 70px"}
                  = thumbnail_tag doc
                %td
                  .title= doc.heading
                  .tools
                    .btn-group
                      %a.btn{:href => url_for(:documents, :comb, :id => doc._id), :class => (doc.readable? ? nil : "disabled")}
                        %i.icon-edit{:title => I18n.t("documents.edit")}
                      %a.btn{:href => url_for(:documents, :map, :id => doc._id), :class => (doc.has_geocoded_addresses? ? nil : "disabled")}
                        %i.icon-globe{:title => I18n.t("documents.map")}
                      %a.btn{:href => original_file_url(doc)}
                        %i.icon-download-alt{:title => I18n.t("documents.download")}
                      %a.btn{:href => url_for(:documents, :people, :id => doc, :format => :csv)}
                        %i.icon-list-alt{:title => I18n.t("documents.export")}
                %td
                  = doc.category
                %td
                  = doc._id.generation_time.strftime("%d/%m/%y")
                %td.state
                  - if doc.processed?
                    = I18n.t("documents.done")
                    .hidden{:style => "display: none;"}
                      .progress.progress-striped.active
                        .bar{:style => "width: 100%;"}
                  - else
                    .progress.progress-striped.active
                      .bar{:style => "width: #{doc.state_to_percentage}%;"}

    .sidebar.with-scrollbar.span5{:style => "background-color: #fff; border: 0"}
      .with-scrollbar-inner#document
        %h4
          = I18n.t("documents.message")
